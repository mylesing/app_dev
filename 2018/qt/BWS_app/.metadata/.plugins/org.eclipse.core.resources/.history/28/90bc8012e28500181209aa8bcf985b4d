import java.util.LinkedList;
import java.util.List;

/** 
 * This the object class for the attribute options that will be
 * ranked with the BWS method. It stores the attribute's name, 
 * description, list of attributes currently ranked higher, and
 * a tally of how many attributes it is ranked higher than.
 */


public class Attribute {
	
	/** The name and description for this Attribute.
	 *  name: Attributes can have a long description. This gives it a
	 *  	  shorter name.
	 *  description: A description is how the Attribute appears in the 
	 *  			 question (i.e. "Runny nose").
	 */
	private String name;
	private String description;
	
	/** The list and tally for this Attribute.
	 *  list: A list containing the names of Attributes ranked higher.
	 *  tally: The count of how many Attributes this Attribute is
	 *  	   ranked higher than.
	 */
	private LinkedList<String> list;
	private int tally;
	
	/**
	 * Constructors
	 */
	public Attribute(String name, String description) {
		this.name = name;
		this.description = description;
		this.list = new LinkedList<String>();
		this.tally = 0;
	}
	
	public Attribute(String name, String description, LinkedList<String> list, int tally) {
		this.name = name;
		this.description = description;
		this.list = list;
		this.tally = tally;
	}
	

	/** Methods
	 *  -There is no set name method because list is dependent on 
	 *  the name of attribute being added to list.
	 *  -There is no remove from list method because additions to 
	 *  list should be final and the result of a true comparison.
	 *  -There is no decrement tally for the same reason as above.
	 */
	
	/**
	 * Get a copy of the name of the Attribute.
	 */
	public String getName() {
		String nameCopy = this.name;
		return nameCopy;
	}
	
	/**
	 * Get a copy of the description of the Attribute.
	 */
	public String getDescriptions() {
		String descriptionCopy = this.description;
		return descriptionCopy;
	}
	
	/**
	 * Change the description of this Attribute.
	 */
	public void setDescription(String description) {
		this.description = description;
	}
	
	/**
	 * Add the name of the Attribute that is ranked higher if it
	 * doesn't already exist in the list.
	 */
	public void addToList(Attribute attr) {
		if (!list.contains(attr.getName())) {
			list.add(attr.name);
			attr.incrementTally();
		}
		
	}
	
	/**
	 * Increment the tally by 1.
	 */
	private void incrementTally() {
		tally++;
	}
	
	/**
	 * Get the total number of comparisons this Attribute has with
	 * other Attributes.
	 */
	public int getTotal() {
		return tally + list.size();
	}

	public LinkedList<String> getList() {
		return list.clone();
	}
	
}
